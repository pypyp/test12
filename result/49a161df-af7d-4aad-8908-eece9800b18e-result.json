{"name": "编辑设备", "status": "failed", "statusDetails": {"message": "AssertionError: assert 1003 == 0", "trace": "self = <testCase.test_devices.test_dev.Test_Liquid object at 0x0000011986FCEBC8>\n\n    @allure.title('编辑设备')\n    @pytest.mark.run(order=1)\n    def test_dev_update(self):\n        data1['enableTouchFeedback'] = 1\n        response = requests.post(url.format('device/update'), headers=read_yaml('headers'),\n                                 data=json.dumps(data1)).json()\n        data = MysqlDb().select_db(\n            \"select * from {}.`dev_info` where id =\\'{}\\'\".format(read_bastase_sql()[4], data1['id']))\n        logger.getlogger().debug('编辑设备：传参%s返回体%s', data1, response)\n    \n        try:\n>           assert data[0]['enable_touch_feedback'] == data1['enableTouchFeedback']\nE           AssertionError: assert 0 == 1\n\ntest_devices\\test_dev.py:54: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testCase.test_devices.test_dev.Test_Liquid object at 0x0000011986FCEBC8>\n\n    @allure.title('编辑设备')\n    @pytest.mark.run(order=1)\n    def test_dev_update(self):\n        data1['enableTouchFeedback'] = 1\n        response = requests.post(url.format('device/update'), headers=read_yaml('headers'),\n                                 data=json.dumps(data1)).json()\n        data = MysqlDb().select_db(\n            \"select * from {}.`dev_info` where id =\\'{}\\'\".format(read_bastase_sql()[4], data1['id']))\n        logger.getlogger().debug('编辑设备：传参%s返回体%s', data1, response)\n    \n        try:\n            assert data[0]['enable_touch_feedback'] == data1['enableTouchFeedback']\n            assert response['code'] == 0\n            assert response['msg'] == '请求成功'\n        except AssertionError:\n            logger.getlogger().error(\"编辑设备 %s\", \"接口报错\", exc_info=1)\n>           assert response['code'] == 0\nE           assert 1003 == 0\n\ntest_devices\\test_dev.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "9770efdc-8a13-4a45-ade2-f4ad6be6d9d9-attachment.txt", "type": "text/plain"}], "start": 1636429151189, "stop": 1636429151329, "uuid": "7337088e-65bc-416b-89e0-8dcf69f57510", "historyId": "1ffb1a54e43a460f484a8edf275bdb69", "testCaseId": "8e0f53af53d9a99c87acf6fa903f62fc", "fullName": "testCase.test_devices.test_dev.Test_Liquid#test_dev_update", "labels": [{"name": "tag", "value": "run(order=1)"}, {"name": "parentSuite", "value": "testCase.test_devices"}, {"name": "suite", "value": "test_dev"}, {"name": "subSuite", "value": "Test_Liquid"}, {"name": "host", "value": "LAPTOP-BFBFSDO6"}, {"name": "thread", "value": "15468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_devices.test_dev"}]}